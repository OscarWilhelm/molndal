[{"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\index.tsx":"1","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\App.tsx":"3","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\routes\\Routes.tsx":"4","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\provider\\UserProvider.tsx":"5","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\Navigation.tsx":"6","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\routes\\RoutingPath.ts":"7","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\PlanningView.tsx":"8","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\HomeView.tsx":"9","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\SignInView.tsx":"10","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\ItemsView.tsx":"11","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\authenticatedViews\\SettingsView.tsx":"12","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\mobilenavigation\\MobileNavigation.tsx":"13","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\desktopnavigation\\DesktopNavigation.tsx":"14","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\hooks\\useWindowDimensions.tsx":"15","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\api\\service\\StarwarsAPIservice.ts":"16","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\mobilenavigation\\hamburgerbutton\\HamburgerButton.tsx":"17","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\backdrop\\Backdrop.tsx":"18","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\mobilenavigation\\sidebar\\SideBar.tsx":"19","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\profile\\Profile.tsx":"20","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\api\\StarwarsAPI.ts":"21","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\profile\\profiledropdown\\ProfileDropDown.tsx":"22","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\api\\service\\BackendAPIService.ts":"23","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\api\\BackendAPI.ts":"24"},{"size":478,"mtime":1611325287860,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":378,"mtime":1612967901541,"results":"28","hashOfConfig":"26"},{"size":1721,"mtime":1614089589693,"results":"29","hashOfConfig":"26"},{"size":420,"mtime":1612421988087,"results":"30","hashOfConfig":"26"},{"size":569,"mtime":1613055260691,"results":"31","hashOfConfig":"26"},{"size":310,"mtime":1613390990248,"results":"32","hashOfConfig":"26"},{"size":1241,"mtime":1615839993903,"results":"33","hashOfConfig":"26"},{"size":189,"mtime":1612292998972,"results":"34","hashOfConfig":"26"},{"size":1264,"mtime":1614089557723,"results":"35","hashOfConfig":"26"},{"size":1190,"mtime":1613472288904,"results":"36","hashOfConfig":"26"},{"size":151,"mtime":1613390868888,"results":"37","hashOfConfig":"26"},{"size":613,"mtime":1613382054687,"results":"38","hashOfConfig":"26"},{"size":1331,"mtime":1613372522067,"results":"39","hashOfConfig":"26"},{"size":582,"mtime":1612967649407,"results":"40","hashOfConfig":"26"},{"size":341,"mtime":1613404412317,"results":"41","hashOfConfig":"26"},{"size":398,"mtime":1613056434570,"results":"42","hashOfConfig":"26"},{"size":232,"mtime":1613381940234,"results":"43","hashOfConfig":"26"},{"size":846,"mtime":1614089586842,"results":"44","hashOfConfig":"26"},{"size":578,"mtime":1612862644452,"results":"45","hashOfConfig":"26"},{"size":151,"mtime":1614089560209,"results":"46","hashOfConfig":"26"},{"size":719,"mtime":1613391199892,"results":"47","hashOfConfig":"26"},{"size":359,"mtime":1615836693368,"results":"48","hashOfConfig":"26"},{"size":200,"mtime":1615840000486,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1h1hejy",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\index.tsx",[],["107","108"],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\App.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\routes\\Routes.tsx",["109"],"import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { HomeView } from '../view/HomeView'\r\nimport { PlanningView } from '../view/PlanningView'\r\nimport { ItemsView } from '../view/ItemsView'\r\nimport { SignInView } from '../view/SignInView'\r\nimport RoutingPath from './RoutingPath'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\nimport { useEffect, useContext } from 'react'\r\nimport { SettingsView } from '../view/authenticatedViews/SettingsView'\r\n\r\nexport const Routes = (props: { children: React.ReactChild }) => {\r\n\r\n  const [authUser, setAuthUser] = useContext(UserContext)\r\n  const { children } = props\r\n\r\n  const blockRouteIfAuthenticated = (authView: React.FC, nonAuthView: React.FC) => {\r\n    return !authUser ? authView : nonAuthView\r\n  }\r\n\r\n  const blockRouteIfNotAuthenticated = (authView: React.FC, nonAuthView: React.FC) => {\r\n    return authUser ? authView : nonAuthView\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('user')) {\r\n      setAuthUser({ username: localStorage.getItem('user') })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      {children}\r\n      <Switch>\r\n        <Route exact path={RoutingPath.homeView} component={HomeView} />\r\n        <Route exact path={RoutingPath.planningView} component={PlanningView} />\r\n        <Route exact path={RoutingPath.itemsView} component={ItemsView} />\r\n        <Route exact path={RoutingPath.signInView} component={blockRouteIfAuthenticated(SignInView, HomeView)} />\r\n        <Route exact path={RoutingPath.settingsView} component={blockRouteIfNotAuthenticated(SettingsView, SignInView)} />\r\n        <Route component={HomeView} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\provider\\UserProvider.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\Navigation.tsx",["110"],"import React from 'react'\r\nimport './Navigation.css'\r\nimport { MobileNavigation } from './mobilenavigation/MobileNavigation'\r\nimport { DesktopNavigation } from './desktopnavigation/DesktopNavigation'\r\nimport { useWindowDimensions } from '../../hooks/useWindowDimensions'\r\n\r\nexport const Navigation = () => {\r\n\r\n  const { width, height } = useWindowDimensions()\r\n\r\n  const displayNavigation = () => {\r\n    return (width <= 1000)\r\n      ? <MobileNavigation />\r\n      : <DesktopNavigation />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {displayNavigation()}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\routes\\RoutingPath.ts",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\PlanningView.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\HomeView.tsx",["111","112"],"import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport const HomeView = () => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>This is the homeView</h1>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\SignInView.tsx",["113","114"],"import React from 'react'\r\nimport { useState, useContext } from 'react';\r\nimport { loginCredentials } from '../shared/interface/interface'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../routes/RoutingPath'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\n\r\n//Lägg till en authenticatedUser variabel. \r\n\r\nexport const SignInView = () => {\r\n  const history = useHistory()\r\n  const [loginCredentials, setLoginCredentials] = useState<loginCredentials>({ username: '', password: '' });\r\n  const [authUser, setAuthUser] = useContext(UserContext)\r\n\r\n  const signIn = () => {\r\n    localStorage.setItem('user', loginCredentials.username)\r\n    setAuthUser(loginCredentials)\r\n    history.push(RoutingPath.homeView)\r\n  }\r\n\r\n  const handleChange = () => {\r\n    //VG \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{loginCredentials.username}</h1>\r\n      <form>\r\n        <input placeholder='username' onChange={event => setLoginCredentials({ ...loginCredentials, username: event.target.value })} /> <br />\r\n        <input placeholder='password' onChange={event => setLoginCredentials({ ...loginCredentials, password: event.target.value })} />\r\n        <button onClick={() => signIn()} >Sign In</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\ItemsView.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\view\\authenticatedViews\\SettingsView.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\mobilenavigation\\MobileNavigation.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\desktopnavigation\\DesktopNavigation.tsx",["115"],"import React from 'react'\r\nimport './DesktopNavigation.css'\r\nimport logotype from '../../../shared/images/logotype.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useContext } from 'react'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\nimport { UserContext } from '../../../shared/provider/UserProvider'\r\nimport { Profile } from '../../profile/Profile'\r\n\r\nexport const DesktopNavigation = () => {\r\n  const history = useHistory();\r\n  const [authUser, setAuthUser] = useContext(UserContext)\r\n\r\n  const showUserOrSignInButton = () => {\r\n    return authUser\r\n      ? <div className='profile'><Profile /></div>\r\n      : <span className='signInButton' onClick={() => history.push(RoutingPath.signInView)}>Sign In</span>\r\n  }\r\n\r\n  return (\r\n    <div className='desktopNavigationWrapper'>\r\n      <img className='navigationLogotype' src={logotype} alt={''} />\r\n      <div className='desktopNavigationTabs'>\r\n        <ul className='ulTabsWrapper'>\r\n        <li className='liTabs' onClick={() => history.push(RoutingPath.homeView)}>Home</li>\r\n        <li className='liTabs' onClick={() => history.push(RoutingPath.planningView)}>Plan</li>\r\n        <li className='liTabs' onClick={() => history.push(RoutingPath.itemsView)}>Items</li>\r\n        </ul>\r\n    </div>\r\n      { showUserOrSignInButton() }\r\n    </div >\r\n  )\r\n}\r\n","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\hooks\\useWindowDimensions.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\api\\service\\StarwarsAPIservice.ts",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\mobilenavigation\\hamburgerbutton\\HamburgerButton.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\backdrop\\Backdrop.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\navigation\\mobilenavigation\\sidebar\\SideBar.tsx",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\profile\\Profile.tsx",["116"],"import React from 'react'\r\nimport { useContext } from 'react'\r\nimport { UserContext } from '../../shared/provider/UserProvider'\r\nimport './Profile.css'\r\nimport { ProfileDropDown } from './profiledropdown/ProfileDropDown'\r\n\r\nexport const Profile = () => {\r\n\r\n  const [authUser, setAuthUser] = useContext(UserContext)\r\n\r\n  return (\r\n    <div className='profileWrapper'>\r\n      <span className='profilename'>{authUser.username}</span>\r\n      <ProfileDropDown />\r\n      <img className='profileimg' src={'https://thispersondoesnotexist.com/image'} alt=''></img>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\api\\StarwarsAPI.ts",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\components\\profile\\profiledropdown\\ProfileDropDown.tsx",["117"],"import React from 'react'\r\nimport { useContext } from 'react'\r\nimport { UserContext } from '../../../shared/provider/UserProvider'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\n\r\nexport const ProfileDropDown = () => {\r\n  const history = useHistory()\r\n  const [authUser, setAuthUser] = useContext(UserContext)\r\n\r\n  const logout = () => {\r\n    setAuthUser(false)\r\n    localStorage.removeItem('user')\r\n    history.push(RoutingPath.homeView)\r\n  }\r\n\r\n  return (\r\n    <div className='profileDropDown'>\r\n      <span onClick={() => history.push(RoutingPath.settingsView)}>Inställningar</span>\r\n      <span onClick={() => logout()}>Logga ut!</span>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\api\\service\\BackendAPIService.ts",[],"C:\\Users\\Oscar\\repos\\molndal\\client\\src\\shared\\api\\BackendAPI.ts",["118"],"import Axios from 'axios'\r\n\r\nconst developmentURL = 'http://localhost:3001'\r\nconst productionURL = ''\r\n\r\nconst BackendAPI = Axios.create({\r\n  baseURL: developmentURL\r\n})\r\n\r\nexport default BackendAPI\r\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":29,"column":6,"nodeType":"125","endLine":29,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":9,"column":18,"nodeType":"129","messageId":"130","endLine":9,"endColumn":24},{"ruleId":"127","severity":1,"message":"131","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":19},{"ruleId":"127","severity":1,"message":"132","line":2,"column":21,"nodeType":"129","messageId":"130","endLine":2,"endColumn":29},{"ruleId":"127","severity":1,"message":"133","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":18},{"ruleId":"127","severity":1,"message":"134","line":21,"column":9,"nodeType":"129","messageId":"130","endLine":21,"endColumn":21},{"ruleId":"127","severity":1,"message":"135","line":12,"column":20,"nodeType":"129","messageId":"130","endLine":12,"endColumn":31},{"ruleId":"127","severity":1,"message":"135","line":9,"column":20,"nodeType":"129","messageId":"130","endLine":9,"endColumn":31},{"ruleId":"127","severity":1,"message":"133","line":9,"column":10,"nodeType":"129","messageId":"130","endLine":9,"endColumn":18},{"ruleId":"127","severity":1,"message":"136","line":4,"column":7,"nodeType":"129","messageId":"130","endLine":4,"endColumn":20},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthUser'. Either include it or remove the dependency array.","ArrayExpression",["139"],"@typescript-eslint/no-unused-vars","'height' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'authUser' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'setAuthUser' is assigned a value but never used.","'productionURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [setAuthUser]",{"range":"142","text":"143"},[1091,1093],"[setAuthUser]"]